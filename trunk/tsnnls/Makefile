# Makefile.in generated by automake 1.6.3 from Makefile.am.
# tsnnls/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Makefile.am for /tsnnls directory
#
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/libtsnnls
pkglibdir = $(libdir)/libtsnnls
pkgincludedir = $(includedir)/libtsnnls
top_builddir = ..

ACLOCAL = ${SHELL} /Users/cantarel/tsnnls/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/cantarel/tsnnls/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/cantarel/tsnnls/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/cantarel/tsnnls/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = powerpc-apple-darwin8.8.0

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/cantarel/tsnnls/missing --run tar
AR = ar
AS = @AS@
AWK = gawk
BLAS_LIBS =  
CC = gcc
CXX = g++
CXXCPP = g++ -E
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = echo
EGREP = grep -E
F77 = 
FLIBS =  
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LAPACK_LIBS = -framework vecLib -lm
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_VERSION = 1:0:1
LN_S = ln -s
OBJDUMP = @OBJDUMP@
PACKAGE = libtsnnls
RANLIB = ranlib
RC = @RC@
STRIP = strip
VERSION = 1.0.1
am__include = include
am__quote = 
install_sh = /Users/cantarel/tsnnls/install-sh

AM_CFLAGS = -g -O3 -Wall

SUBDIRS = taucs_basic

pkginclude_HEADERS = tsnnls.h lsqr.h
noinst_HEADERS = gsl_cblas.h
nobase_pkginclude_HEADERS = taucs_basic/taucs.h taucs_basic/colamd.h taucs_basic/f2c.h taucs_basic/taucs_config_build.h taucs_basic/taucs_config_tests.h taucs_basic/taucs_private.h
lib_LTLIBRARIES = libtsnnls.la

libtsnnls_la_SOURCES = taucs_basic/taucs_logging.c \
	taucs_basic/taucs_malloc.c \
	taucs_basic/taucs_ccs_order.c \
	taucs_basic/taucs_ccs_ops.c \
	taucs_basic/taucs_vec_base.c \
	taucs_basic/taucs_complex.c \
	taucs_basic/colamd.c \
	taucs_basic/amdbar.c \
	taucs_basic/amdexa.c \
	taucs_basic/amdtru.c \
	taucs_basic/genmmd.c \
	taucs_basic/taucs_timer.c \
	taucs_basic/taucs_sn_llt.c \
	taucs_basic/taucs_ccs_base.c \
	tlsqr.c \
        tsnnls.c \
	lsqr.c


check_PROGRAMS = tsnnls_test
tsnnls_test_SOURCES = tsnnls_test.c
tsnnls_test_LDFLAGS = -ltsnnls $(LAPACK_LIBS) $(BLAS_LIBS) $(LIBS) $(FLIBS)
subdir = tsnnls
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libtsnnls_la_LDFLAGS =
libtsnnls_la_LIBADD =
am_libtsnnls_la_OBJECTS = taucs_logging.lo taucs_malloc.lo \
	taucs_ccs_order.lo taucs_ccs_ops.lo taucs_vec_base.lo \
	taucs_complex.lo colamd.lo amdbar.lo amdexa.lo amdtru.lo \
	genmmd.lo taucs_timer.lo taucs_sn_llt.lo taucs_ccs_base.lo \
	tlsqr.lo tsnnls.lo lsqr.lo
libtsnnls_la_OBJECTS = $(am_libtsnnls_la_OBJECTS)
check_PROGRAMS = tsnnls_test$(EXEEXT)
am_tsnnls_test_OBJECTS = tsnnls_test.$(OBJEXT)
tsnnls_test_OBJECTS = $(am_tsnnls_test_OBJECTS)
tsnnls_test_LDADD = $(LDADD)
tsnnls_test_DEPENDENCIES =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/amdbar.Plo ./$(DEPDIR)/amdexa.Plo \
	./$(DEPDIR)/amdtru.Plo ./$(DEPDIR)/colamd.Plo \
	./$(DEPDIR)/genmmd.Plo ./$(DEPDIR)/lsqr.Plo \
	./$(DEPDIR)/taucs_ccs_base.Plo \
	./$(DEPDIR)/taucs_ccs_ops.Plo \
	./$(DEPDIR)/taucs_ccs_order.Plo \
	./$(DEPDIR)/taucs_complex.Plo \
	./$(DEPDIR)/taucs_logging.Plo \
	./$(DEPDIR)/taucs_malloc.Plo \
	./$(DEPDIR)/taucs_sn_llt.Plo \
	./$(DEPDIR)/taucs_timer.Plo \
	./$(DEPDIR)/taucs_vec_base.Plo \
	./$(DEPDIR)/tlsqr.Plo ./$(DEPDIR)/tsnnls.Plo \
	./$(DEPDIR)/tsnnls_test.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2
DIST_SOURCES = $(libtsnnls_la_SOURCES) $(tsnnls_test_SOURCES)
HEADERS = $(nobase_pkginclude_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(nobase_pkginclude_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS) Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libtsnnls_la_SOURCES) $(tsnnls_test_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tsnnls/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
taucs_logging.lo: taucs_basic/taucs_logging.c
taucs_malloc.lo: taucs_basic/taucs_malloc.c
taucs_ccs_order.lo: taucs_basic/taucs_ccs_order.c
taucs_ccs_ops.lo: taucs_basic/taucs_ccs_ops.c
taucs_vec_base.lo: taucs_basic/taucs_vec_base.c
taucs_complex.lo: taucs_basic/taucs_complex.c
colamd.lo: taucs_basic/colamd.c
amdbar.lo: taucs_basic/amdbar.c
amdexa.lo: taucs_basic/amdexa.c
amdtru.lo: taucs_basic/amdtru.c
genmmd.lo: taucs_basic/genmmd.c
taucs_timer.lo: taucs_basic/taucs_timer.c
taucs_sn_llt.lo: taucs_basic/taucs_sn_llt.c
taucs_ccs_base.lo: taucs_basic/taucs_ccs_base.c
libtsnnls.la: $(libtsnnls_la_OBJECTS) $(libtsnnls_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libtsnnls_la_LDFLAGS) $(libtsnnls_la_OBJECTS) $(libtsnnls_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
tsnnls_test$(EXEEXT): $(tsnnls_test_OBJECTS) $(tsnnls_test_DEPENDENCIES) 
	@rm -f tsnnls_test$(EXEEXT)
	$(LINK) $(tsnnls_test_LDFLAGS) $(tsnnls_test_OBJECTS) $(tsnnls_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/amdbar.Plo
include ./$(DEPDIR)/amdexa.Plo
include ./$(DEPDIR)/amdtru.Plo
include ./$(DEPDIR)/colamd.Plo
include ./$(DEPDIR)/genmmd.Plo
include ./$(DEPDIR)/lsqr.Plo
include ./$(DEPDIR)/taucs_ccs_base.Plo
include ./$(DEPDIR)/taucs_ccs_ops.Plo
include ./$(DEPDIR)/taucs_ccs_order.Plo
include ./$(DEPDIR)/taucs_complex.Plo
include ./$(DEPDIR)/taucs_logging.Plo
include ./$(DEPDIR)/taucs_malloc.Plo
include ./$(DEPDIR)/taucs_sn_llt.Plo
include ./$(DEPDIR)/taucs_timer.Plo
include ./$(DEPDIR)/taucs_vec_base.Plo
include ./$(DEPDIR)/tlsqr.Plo
include ./$(DEPDIR)/tsnnls.Plo
include ./$(DEPDIR)/tsnnls_test.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

taucs_logging.o: taucs_basic/taucs_logging.c
	source='taucs_basic/taucs_logging.c' object='taucs_logging.o' libtool=no \
	depfile='$(DEPDIR)/taucs_logging.Po' tmpdepfile='$(DEPDIR)/taucs_logging.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_logging.o `test -f 'taucs_basic/taucs_logging.c' || echo '$(srcdir)/'`taucs_basic/taucs_logging.c

taucs_logging.obj: taucs_basic/taucs_logging.c
	source='taucs_basic/taucs_logging.c' object='taucs_logging.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_logging.Po' tmpdepfile='$(DEPDIR)/taucs_logging.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_logging.obj `cygpath -w taucs_basic/taucs_logging.c`

taucs_logging.lo: taucs_basic/taucs_logging.c
	source='taucs_basic/taucs_logging.c' object='taucs_logging.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_logging.Plo' tmpdepfile='$(DEPDIR)/taucs_logging.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_logging.lo `test -f 'taucs_basic/taucs_logging.c' || echo '$(srcdir)/'`taucs_basic/taucs_logging.c

taucs_malloc.o: taucs_basic/taucs_malloc.c
	source='taucs_basic/taucs_malloc.c' object='taucs_malloc.o' libtool=no \
	depfile='$(DEPDIR)/taucs_malloc.Po' tmpdepfile='$(DEPDIR)/taucs_malloc.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_malloc.o `test -f 'taucs_basic/taucs_malloc.c' || echo '$(srcdir)/'`taucs_basic/taucs_malloc.c

taucs_malloc.obj: taucs_basic/taucs_malloc.c
	source='taucs_basic/taucs_malloc.c' object='taucs_malloc.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_malloc.Po' tmpdepfile='$(DEPDIR)/taucs_malloc.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_malloc.obj `cygpath -w taucs_basic/taucs_malloc.c`

taucs_malloc.lo: taucs_basic/taucs_malloc.c
	source='taucs_basic/taucs_malloc.c' object='taucs_malloc.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_malloc.Plo' tmpdepfile='$(DEPDIR)/taucs_malloc.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_malloc.lo `test -f 'taucs_basic/taucs_malloc.c' || echo '$(srcdir)/'`taucs_basic/taucs_malloc.c

taucs_ccs_order.o: taucs_basic/taucs_ccs_order.c
	source='taucs_basic/taucs_ccs_order.c' object='taucs_ccs_order.o' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_order.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_order.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_order.o `test -f 'taucs_basic/taucs_ccs_order.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_order.c

taucs_ccs_order.obj: taucs_basic/taucs_ccs_order.c
	source='taucs_basic/taucs_ccs_order.c' object='taucs_ccs_order.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_order.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_order.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_order.obj `cygpath -w taucs_basic/taucs_ccs_order.c`

taucs_ccs_order.lo: taucs_basic/taucs_ccs_order.c
	source='taucs_basic/taucs_ccs_order.c' object='taucs_ccs_order.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_ccs_order.Plo' tmpdepfile='$(DEPDIR)/taucs_ccs_order.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_order.lo `test -f 'taucs_basic/taucs_ccs_order.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_order.c

taucs_ccs_ops.o: taucs_basic/taucs_ccs_ops.c
	source='taucs_basic/taucs_ccs_ops.c' object='taucs_ccs_ops.o' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_ops.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_ops.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_ops.o `test -f 'taucs_basic/taucs_ccs_ops.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_ops.c

taucs_ccs_ops.obj: taucs_basic/taucs_ccs_ops.c
	source='taucs_basic/taucs_ccs_ops.c' object='taucs_ccs_ops.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_ops.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_ops.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_ops.obj `cygpath -w taucs_basic/taucs_ccs_ops.c`

taucs_ccs_ops.lo: taucs_basic/taucs_ccs_ops.c
	source='taucs_basic/taucs_ccs_ops.c' object='taucs_ccs_ops.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_ccs_ops.Plo' tmpdepfile='$(DEPDIR)/taucs_ccs_ops.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_ops.lo `test -f 'taucs_basic/taucs_ccs_ops.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_ops.c

taucs_vec_base.o: taucs_basic/taucs_vec_base.c
	source='taucs_basic/taucs_vec_base.c' object='taucs_vec_base.o' libtool=no \
	depfile='$(DEPDIR)/taucs_vec_base.Po' tmpdepfile='$(DEPDIR)/taucs_vec_base.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_vec_base.o `test -f 'taucs_basic/taucs_vec_base.c' || echo '$(srcdir)/'`taucs_basic/taucs_vec_base.c

taucs_vec_base.obj: taucs_basic/taucs_vec_base.c
	source='taucs_basic/taucs_vec_base.c' object='taucs_vec_base.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_vec_base.Po' tmpdepfile='$(DEPDIR)/taucs_vec_base.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_vec_base.obj `cygpath -w taucs_basic/taucs_vec_base.c`

taucs_vec_base.lo: taucs_basic/taucs_vec_base.c
	source='taucs_basic/taucs_vec_base.c' object='taucs_vec_base.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_vec_base.Plo' tmpdepfile='$(DEPDIR)/taucs_vec_base.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_vec_base.lo `test -f 'taucs_basic/taucs_vec_base.c' || echo '$(srcdir)/'`taucs_basic/taucs_vec_base.c

taucs_complex.o: taucs_basic/taucs_complex.c
	source='taucs_basic/taucs_complex.c' object='taucs_complex.o' libtool=no \
	depfile='$(DEPDIR)/taucs_complex.Po' tmpdepfile='$(DEPDIR)/taucs_complex.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_complex.o `test -f 'taucs_basic/taucs_complex.c' || echo '$(srcdir)/'`taucs_basic/taucs_complex.c

taucs_complex.obj: taucs_basic/taucs_complex.c
	source='taucs_basic/taucs_complex.c' object='taucs_complex.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_complex.Po' tmpdepfile='$(DEPDIR)/taucs_complex.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_complex.obj `cygpath -w taucs_basic/taucs_complex.c`

taucs_complex.lo: taucs_basic/taucs_complex.c
	source='taucs_basic/taucs_complex.c' object='taucs_complex.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_complex.Plo' tmpdepfile='$(DEPDIR)/taucs_complex.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_complex.lo `test -f 'taucs_basic/taucs_complex.c' || echo '$(srcdir)/'`taucs_basic/taucs_complex.c

colamd.o: taucs_basic/colamd.c
	source='taucs_basic/colamd.c' object='colamd.o' libtool=no \
	depfile='$(DEPDIR)/colamd.Po' tmpdepfile='$(DEPDIR)/colamd.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colamd.o `test -f 'taucs_basic/colamd.c' || echo '$(srcdir)/'`taucs_basic/colamd.c

colamd.obj: taucs_basic/colamd.c
	source='taucs_basic/colamd.c' object='colamd.obj' libtool=no \
	depfile='$(DEPDIR)/colamd.Po' tmpdepfile='$(DEPDIR)/colamd.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colamd.obj `cygpath -w taucs_basic/colamd.c`

colamd.lo: taucs_basic/colamd.c
	source='taucs_basic/colamd.c' object='colamd.lo' libtool=yes \
	depfile='$(DEPDIR)/colamd.Plo' tmpdepfile='$(DEPDIR)/colamd.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colamd.lo `test -f 'taucs_basic/colamd.c' || echo '$(srcdir)/'`taucs_basic/colamd.c

amdbar.o: taucs_basic/amdbar.c
	source='taucs_basic/amdbar.c' object='amdbar.o' libtool=no \
	depfile='$(DEPDIR)/amdbar.Po' tmpdepfile='$(DEPDIR)/amdbar.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdbar.o `test -f 'taucs_basic/amdbar.c' || echo '$(srcdir)/'`taucs_basic/amdbar.c

amdbar.obj: taucs_basic/amdbar.c
	source='taucs_basic/amdbar.c' object='amdbar.obj' libtool=no \
	depfile='$(DEPDIR)/amdbar.Po' tmpdepfile='$(DEPDIR)/amdbar.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdbar.obj `cygpath -w taucs_basic/amdbar.c`

amdbar.lo: taucs_basic/amdbar.c
	source='taucs_basic/amdbar.c' object='amdbar.lo' libtool=yes \
	depfile='$(DEPDIR)/amdbar.Plo' tmpdepfile='$(DEPDIR)/amdbar.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdbar.lo `test -f 'taucs_basic/amdbar.c' || echo '$(srcdir)/'`taucs_basic/amdbar.c

amdexa.o: taucs_basic/amdexa.c
	source='taucs_basic/amdexa.c' object='amdexa.o' libtool=no \
	depfile='$(DEPDIR)/amdexa.Po' tmpdepfile='$(DEPDIR)/amdexa.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdexa.o `test -f 'taucs_basic/amdexa.c' || echo '$(srcdir)/'`taucs_basic/amdexa.c

amdexa.obj: taucs_basic/amdexa.c
	source='taucs_basic/amdexa.c' object='amdexa.obj' libtool=no \
	depfile='$(DEPDIR)/amdexa.Po' tmpdepfile='$(DEPDIR)/amdexa.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdexa.obj `cygpath -w taucs_basic/amdexa.c`

amdexa.lo: taucs_basic/amdexa.c
	source='taucs_basic/amdexa.c' object='amdexa.lo' libtool=yes \
	depfile='$(DEPDIR)/amdexa.Plo' tmpdepfile='$(DEPDIR)/amdexa.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdexa.lo `test -f 'taucs_basic/amdexa.c' || echo '$(srcdir)/'`taucs_basic/amdexa.c

amdtru.o: taucs_basic/amdtru.c
	source='taucs_basic/amdtru.c' object='amdtru.o' libtool=no \
	depfile='$(DEPDIR)/amdtru.Po' tmpdepfile='$(DEPDIR)/amdtru.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdtru.o `test -f 'taucs_basic/amdtru.c' || echo '$(srcdir)/'`taucs_basic/amdtru.c

amdtru.obj: taucs_basic/amdtru.c
	source='taucs_basic/amdtru.c' object='amdtru.obj' libtool=no \
	depfile='$(DEPDIR)/amdtru.Po' tmpdepfile='$(DEPDIR)/amdtru.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdtru.obj `cygpath -w taucs_basic/amdtru.c`

amdtru.lo: taucs_basic/amdtru.c
	source='taucs_basic/amdtru.c' object='amdtru.lo' libtool=yes \
	depfile='$(DEPDIR)/amdtru.Plo' tmpdepfile='$(DEPDIR)/amdtru.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amdtru.lo `test -f 'taucs_basic/amdtru.c' || echo '$(srcdir)/'`taucs_basic/amdtru.c

genmmd.o: taucs_basic/genmmd.c
	source='taucs_basic/genmmd.c' object='genmmd.o' libtool=no \
	depfile='$(DEPDIR)/genmmd.Po' tmpdepfile='$(DEPDIR)/genmmd.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o genmmd.o `test -f 'taucs_basic/genmmd.c' || echo '$(srcdir)/'`taucs_basic/genmmd.c

genmmd.obj: taucs_basic/genmmd.c
	source='taucs_basic/genmmd.c' object='genmmd.obj' libtool=no \
	depfile='$(DEPDIR)/genmmd.Po' tmpdepfile='$(DEPDIR)/genmmd.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o genmmd.obj `cygpath -w taucs_basic/genmmd.c`

genmmd.lo: taucs_basic/genmmd.c
	source='taucs_basic/genmmd.c' object='genmmd.lo' libtool=yes \
	depfile='$(DEPDIR)/genmmd.Plo' tmpdepfile='$(DEPDIR)/genmmd.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o genmmd.lo `test -f 'taucs_basic/genmmd.c' || echo '$(srcdir)/'`taucs_basic/genmmd.c

taucs_timer.o: taucs_basic/taucs_timer.c
	source='taucs_basic/taucs_timer.c' object='taucs_timer.o' libtool=no \
	depfile='$(DEPDIR)/taucs_timer.Po' tmpdepfile='$(DEPDIR)/taucs_timer.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_timer.o `test -f 'taucs_basic/taucs_timer.c' || echo '$(srcdir)/'`taucs_basic/taucs_timer.c

taucs_timer.obj: taucs_basic/taucs_timer.c
	source='taucs_basic/taucs_timer.c' object='taucs_timer.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_timer.Po' tmpdepfile='$(DEPDIR)/taucs_timer.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_timer.obj `cygpath -w taucs_basic/taucs_timer.c`

taucs_timer.lo: taucs_basic/taucs_timer.c
	source='taucs_basic/taucs_timer.c' object='taucs_timer.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_timer.Plo' tmpdepfile='$(DEPDIR)/taucs_timer.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_timer.lo `test -f 'taucs_basic/taucs_timer.c' || echo '$(srcdir)/'`taucs_basic/taucs_timer.c

taucs_sn_llt.o: taucs_basic/taucs_sn_llt.c
	source='taucs_basic/taucs_sn_llt.c' object='taucs_sn_llt.o' libtool=no \
	depfile='$(DEPDIR)/taucs_sn_llt.Po' tmpdepfile='$(DEPDIR)/taucs_sn_llt.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_sn_llt.o `test -f 'taucs_basic/taucs_sn_llt.c' || echo '$(srcdir)/'`taucs_basic/taucs_sn_llt.c

taucs_sn_llt.obj: taucs_basic/taucs_sn_llt.c
	source='taucs_basic/taucs_sn_llt.c' object='taucs_sn_llt.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_sn_llt.Po' tmpdepfile='$(DEPDIR)/taucs_sn_llt.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_sn_llt.obj `cygpath -w taucs_basic/taucs_sn_llt.c`

taucs_sn_llt.lo: taucs_basic/taucs_sn_llt.c
	source='taucs_basic/taucs_sn_llt.c' object='taucs_sn_llt.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_sn_llt.Plo' tmpdepfile='$(DEPDIR)/taucs_sn_llt.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_sn_llt.lo `test -f 'taucs_basic/taucs_sn_llt.c' || echo '$(srcdir)/'`taucs_basic/taucs_sn_llt.c

taucs_ccs_base.o: taucs_basic/taucs_ccs_base.c
	source='taucs_basic/taucs_ccs_base.c' object='taucs_ccs_base.o' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_base.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_base.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_base.o `test -f 'taucs_basic/taucs_ccs_base.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_base.c

taucs_ccs_base.obj: taucs_basic/taucs_ccs_base.c
	source='taucs_basic/taucs_ccs_base.c' object='taucs_ccs_base.obj' libtool=no \
	depfile='$(DEPDIR)/taucs_ccs_base.Po' tmpdepfile='$(DEPDIR)/taucs_ccs_base.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_base.obj `cygpath -w taucs_basic/taucs_ccs_base.c`

taucs_ccs_base.lo: taucs_basic/taucs_ccs_base.c
	source='taucs_basic/taucs_ccs_base.c' object='taucs_ccs_base.lo' libtool=yes \
	depfile='$(DEPDIR)/taucs_ccs_base.Plo' tmpdepfile='$(DEPDIR)/taucs_ccs_base.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taucs_ccs_base.lo `test -f 'taucs_basic/taucs_ccs_base.c' || echo '$(srcdir)/'`taucs_basic/taucs_ccs_base.c
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
nobase_pkgincludeHEADERS_INSTALL = $(install_sh_DATA)
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(nobase_pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/taucs_basic
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir) $(DESTDIR)$(pkgincludedir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-nobase_pkgincludeHEADERS \
	install-pkgincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS uninstall-pkgincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-recursive distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive \
	install-libLTLIBRARIES install-man \
	install-nobase_pkgincludeHEADERS install-pkgincludeHEADERS \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libLTLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-recursive


#if DARWIN
#tsnnls_test_LDFLAGS = -ltsnnls -framework vecLib
#else
#tsnnls_test_LDFLAGS = -L../external_libraries -ltsnnls -llapacklinux -lblaslinux -lf77blas -lcblas -latlas -lg2c -lm
#endif
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
